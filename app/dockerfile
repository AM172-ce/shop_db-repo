 # Use Python 3.9 slim as the base image for the builder stage
FROM python:3.9-slim AS builder-image

 # Avoid stuck build due to user prompt
ARG DEBIAN_FRONTEND=noninteractive

 # Install necessary build tools and libraries
RUN apt-get update && apt-get install --no-install-recommends -y \
    build-essential \
    python3-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python3 -m venv /home/myuser/venv
ENV PATH="/home/myuser/venv/bin:$PATH"


# Set working directory
RUN mkdir /home/myuser/code
WORKDIR /home/myuser/code

# Install requirements
COPY requirements.txt /home/myuser/code/requirements.txt
RUN pip install --default-timeout=100 --no-cache-dir -r requirements.txt --index-url https://pypi.org/simple/
RUN pip install fastapi uvicorn


# Use Python 3.9 slim as the base image for the runner stage
FROM python:3.9-slim AS runner-image

# Create a non-root user
RUN useradd --create-home myuser

# Copy the virtual environment from the builder image
COPY --from=builder-image /home/myuser/venv /home/myuser/venv

# Switch to non-root user
USER myuser


# Expose port 8080
EXPOSE 8080

# Ensure all messages always reach console
ENV PYTHONUNBUFFERED=1

# Activate virtual environment
ENV VIRTUAL_ENV=/home/myuser/venv
ENV PATH="/home/myuser/venv/bin:$PATH"

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080"]

# FROM python:3.9-slim

# # Set the working directory in the container
# WORKDIR /shared

# # Install any needed packages specified in requirements.txt first
# COPY requirements.txt /shared/app/requirements.txt
# RUN pip install --upgrade pip --index-url https://pypi.org/simple/
# RUN pip install -r requirements.txt --index-url https://pypi.org/simple/


# # Copy the current directory contents into the container at /app
# COPY . /shared
# # Make port 8000 available to the world outside this container
# EXPOSE 8000

# # Define environment variable
# ENV NAME World

# # Run app.py when the container launches
# CMD ["python", "main.py"]